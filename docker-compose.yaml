version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: event-emitter-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: event_pool
    ports:
      - "5432:5432"
    volumes:
      - ../postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: event-emitter-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ../redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

#  mqtt:
#    image: eclipse-mosquitto:latest
#    container_name: event-emitter-mqtt
#    restart: always
#    ports:
#      - "1883:1883"
#      - "9001:9001"
#    volumes:
#      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
#      - ../mqtt_data:/mosquitto/data
#      - ../mqtt_log:/mosquitto/log
#    command: 'mosquitto -c /mosquitto/config/mosquitto.conf'
#    logging:
#      driver: "json-file"
#      options:
#        max-size: 300m
#        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: u2ulabs/event-pool:latest
    container_name: event-emitter-api
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
      - "9090:9090"
    volumes:
      - ./config.yaml:/app/config.yaml
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging:
      driver: "json-file"
      options:
        max-size: 300m
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
